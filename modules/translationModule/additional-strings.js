import { transform } from 'lodash';

// template from https://github.com/bpmn-io/bpmn-js-i18n
translate('Activate create/remove space tool');
translate('Activate global connect tool');
translate('Activate hand tool');
translate('Activate lasso tool');
translate('Ad-hoc');
translate('Add lane above');
translate('Add lane below');
translate('Align elements');
translate('Align elements bottom');
translate('Align elements center');
translate('Align elements left');
translate('Align elements middle');
translate('Align elements right');
translate('Align elements top');
translate('Append compensation activity');
translate('Append conditional intermediate catch event');
translate('Append end event');
translate('Append gateway');
translate('Append intermediate/boundary event');
translate('Append message intermediate catch event');
translate('Append receive task');
translate('Append signal intermediate catch event');
translate('Append task');
translate('Append text annotation');
translate('Append timer intermediate catch event');
translate('Business rule task');
translate('Call activity');
translate('Cancel boundary event');
translate('Cancel end event');
translate('Change element');
translate('Change type');
translate('Collection');
translate('Compensation boundary event');
translate('Compensation end event');
translate('Compensation intermediate throw event');
translate('Compensation start event');
translate('Complex gateway');
translate('Conditional boundary event');
translate('Conditional boundary event (non-interrupting)');
translate('Conditional flow');
translate('Conditional intermediate catch event');
translate('Conditional start event');
translate('Conditional start event (non-interrupting)');
translate('Connect using association');
translate('Connect using data input association');
translate('Connect using sequence/message flow or association');
translate('Create data object reference');
translate('Create data store reference');
translate('Create end event');
translate('Create expanded sub-process');
translate('Create gateway');
translate('Create group');
translate('Create intermediate/boundary event');
translate('Create pool/participant');
translate('Create start event');
translate('Create task');
translate('Data object reference');
translate('Data store reference');
translate('Default flow');
translate('Distribute elements horizontally');
translate('Distribute elements vertically');
translate('Divide into three lanes');
translate('Divide into two lanes');
translate('Empty pool/participant');
translate('Empty pool/participant (removes content)');
translate('End event');
translate('Error boundary event');
translate('Error end event');
translate('Error start event');
translate('Escalation boundary event');
translate('Escalation boundary event (non-interrupting)');
translate('Escalation end event');
translate('Escalation intermediate throw event');
translate('Escalation start event');
translate('Escalation start event (non-interrupting)');
translate('Event sub-process');
translate('Event-based gateway');
translate('Exclusive gateway');
translate('Inclusive gateway');
translate('Intermediate throw event');
translate('Link intermediate catch event');
translate('Link intermediate throw event');
translate('Loop');
translate('Manual task');
translate('Message boundary event');
translate('Message boundary event (non-interrupting)');
translate('Message end event');
translate('Message intermediate catch event');
translate('Message intermediate throw event');
translate('Message start event');
translate('Message start event (non-interrupting)');
translate('Parallel gateway');
translate('Parallel multi-instance');
translate('Participant multiplicity');
translate('Receive task');
translate('Remove');
translate('Script task');
translate('Send task');
translate('Sequence flow');
translate('Sequential multi-instance');
translate('Service task');
translate('Signal boundary event');
translate('Signal boundary event (non-interrupting)');
translate('Signal end event');
translate('Signal intermediate catch event');
translate('Signal intermediate throw event');
translate('Signal start event');
translate('Signal start event (non-interrupting)');
translate('Start event');
translate('Sub-process');
translate('Sub-process (collapsed)');
translate('Sub-process (expanded)');
translate('Task');
translate('Terminate end event');
translate('Timer boundary event');
translate('Timer boundary event (non-interrupting)');
translate('Timer intermediate catch event');
translate('Timer start event');
translate('Timer start event (non-interrupting)');
translate('Toggle non-interrupting');
translate('Transaction');
translate('User task');
translate('already rendered {element}');
translate('correcting missing bpmnElement on {plane} to {rootElement}');
translate('diagram not part of bpmn:Definitions');
translate('element required');
translate('element {element} referenced by {referenced}#{property} not yet drawn');
translate('failed to import {element}');
translate('flow elements must be children of pools/participants');
translate('missing {semantic}#attachedToRef');
translate('more than {count} child lanes');
translate('multiple DI elements defined for {element}');
translate('no bpmnElement referenced in {element}');
translate('no diagram to display');
translate('no parent for {element} in {parent}');
translate('no plane for {element}');
translate('no process or collaboration to display');
translate('no shape type specified');
translate('out of bounds release');
translate('unknown di {di} for element {semantic}');
translate('unrecognized flowElement {element} in context {context}');
translate('unsupported bpmnElement for {plane}: {rootElement}');
translate('{semantic}#{side} Ref not specified');

// missing strings
translate('Category Value');
translate('Collapsed Pool');
translate('Create Start Timer Event');
translate('Create {type}');
translate('Text');
translate('{errors} Errors, {warnings} Warnings');
translate('General');
translate('ID');
translate('ID must be unique.');
translate('Executable');
translate('Element documentation');
translate('Participant Name');
translate('Participant ID');
translate('Process ID');
translate('Process name');
translate('Process documentation');
translate('Expanded pool/participant');

// missing linter messages
translate('A gateway should not merge and split at the same time');
translate('already rendered {element}');
translate('diagram not part of bpmn:Definitions');
translate('Duplicate incoming sequence flows');
translate('Duplicate outgoing sequence flows');
translate('Element has disallowed type <bpmn:ComplexGateway>');
translate('Element has disallowed type <bpmn:MessageStartEvent>');
translate('Element has disallowed type <bpmn:SignalStartEvent>');
translate('Element has disallowed type <bpmnConditionalStartEvent>');
translate('Element ID is longer than 50 characters');
translate('Element ID was not changed yet');
translate('Element is missing label/name');
translate('Element is not connected');
translate('element required');
translate('Event has multiple event definitions');
translate('Flow splits implicitly');
translate('Gateway is superfluous. It only has one source and target.');
translate('Incoming flows do not join');
translate('more than {count} child lanes');
translate('no parent for {element} in {parent}');
translate('no shape type specified');
translate('Process has multiple blank start events');
translate('Process is missing end event');
translate('Process is missing start event');
translate('SequenceFlow is a duplicate');
translate('Start event is missing event definition');
translate('Start event must be blank');
translate('Sub process has multiple blank start events');
translate('Sub process is missing end event');
translate('Sub process is missing start event');
translate('Element is an implicit start');
translate('Element is an implicit end');
translate('Boundary events on iterating sub processes are currently not supported');
translate('Iterating call activites are currently not supported');

// events
translate('Signal');
translate('Global signal reference');
translate('Escalation');
translate('Global escalation reference');
translate('Code');
translate('Link');
translate('Compensation');
translate('Wait for completion');
translate('Activity reference');
translate('Error');
translate('Global error reference');
translate('<none>');
translate('Create new ...');

// procVarGroups
translate('Before Task');
translate('After Task');
translate('In Variables');
translate('Out Variables');
translate('Before Split');
translate('After Merge');
translate('Before Event');
translate('On Event');

// palette tooltips
translate('Delete');
translate('Set color');
translate('Add text annotation');
translate('Connect to other element');

// properties panel headers
translate('Process');

translate('Start Event');
translate('Message Start Event');
translate('Timer Start Event');
translate('Conditional Start Event');
translate('Signal Start Event');

translate('End Event');
translate('Message End Event');
translate('Escalation End Event');
translate('Error End Event');
translate('Compensate End Event');
translate('Signal End Event');
translate('Terminate End Event');

translate('Intermediate Throw Event');
translate('Message Intermediate Catch Event');
translate('Message Intermediate Throw Event');
translate('Escalation Intermediate Throw Event');
translate('Timer Intermediate Catch Event');
translate('Conditional Intermediate Catch Event');
translate('Link Intermediate Catch Event');
translate('Link Intermediate Throw Event');
translate('Compensate Intermediate Throw Event');
translate('Signal Intermediate Catch Event');
translate('Signal Intermediate Throw Event');

translate('Exclusive Gateway');
translate('Parallel Gateway');
translate('Complex Gateway');
translate('Event Based Gateway');

translate('User Task');
translate('Service Task');
translate('Send Task');
translate('Receive Task');
translate('Manual Task');
translate('Business Rule Task');
translate('Script Task');
translate('Call Activity');

translate('Collapsed Sub Process');
translate('Expanded Sub Process');
translate('Event Sub Process');

translate('Data Object Reference');
translate('Data Store Reference');
translate('Participant');
translate('Lane');
translate('Collaboration');
translate('Group');